package main.java.com.saranya.arrays;

import java.util.stream.Collectors;

/**
 * Given two strings string1 and string2, remove those characters from the first
 * string(string1) which are present in the second string(string2). Both strings
 * are different and contain only lowercase characters. NOTE: The size of the
 * first string is always greater than the size of the second string( |string1|
 * > |string2|).
 * 
 * Example:
 * 
 * Input: string1 = “computer” string2 = “cat” Output: “ompuer” Explanation:
 * After removing characters(c, a, t) from string1 we get “ompuer”.
 *
 */
public class RemoveChars {

	public static void main(String[] args) {
		String s1 = "computer";
		String s2 = "cat";
		System.out.println(solution(s1,s2));
		System.out.println("Java 8 "+java8Solution(s1,s2));
	}

	private static String java8Solution(String s1, String s2) {
		return s1.chars().filter(c->s2.indexOf(c)==-1).mapToObj(c->(char)c).map(String::valueOf).collect(Collectors.joining());
	}

	private static String solution(String s1, String s2) {
		for(char c:s2.toCharArray()) {
			if(s1.contains(String.valueOf(c))) {
				s1=s1.replaceAll(String.valueOf(c), "");		
			}
		}
		
		return s1;
	}

}
